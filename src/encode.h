#include <stdio.h>

#define DA_LIB_IMPLEMENTATION
#include "da.h"

// Type definition of an output of the compression algorithm
typedef struct {
  // Amount of time we have to go back in the stream from the actual element to the start of the match
  int B; 

  // Amount of character to copy from the starting point of the match
  int L;
         
  // Explicit character
  char C; 
} LZ77e_output;

// Type definition of the used window
// sbl  -> amount of char behind the current pointer we are serching for
// labl -> amount of char in front of the current pointer we are looking at
typedef struct {
  // Search buffer len
  int sbl;

  // Lookahead buffer len
  int labl;
} LZ77e_window;

// Dynamic array containing all the outputs generated by the compression algorithm
typedef struct {
  LZ77e_output* items;
  size_t count;
  size_t capacity;
} LZ77e_outputs;

// Typdef of the complete algorith encoder
typedef struct {
  char* input;

  char* input_start;
  char* input_end;

  LZ77e_outputs output; 
  LZ77e_window window;

} LZ77_encoder;

static inline LZ77e_outputs* LZ77_encode(LZ77_encoder* encoder);

static inline LZ77e_outputs* LZ77_encode(LZ77_encoder* encoder) 
{
  char *cp = encoder->input;

  while(*cp != '\0') {
    
  }
  
  return &(encoder->output);
}
